<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="compilar" name="pr3">

	<property name="jacocoagent" location="target/coverage/jacoco.exec" />

	<!-- Condiciones para el tratamiento de OS -->
	<condition property="isWindows">
		<os family="windows" />
	</condition>
	<condition property="isUnix">
		<os family="unix" />
	</condition>

	<!-- Condicion para comprobar la existencia del agente -->
	<condition property="jacoco-agent-present">
		<available file="${jacocoagent}" />
	</condition>


	<target name="prueba" depends="os-check">
		<exec dir="." executable="${executable}">
			<arg line="${arglineIni} dir${arglineEnd}" />
		</exec>
	</target>


	<target name="limpiar" description="Elimina archivos innecesarios" depends="os-check">
		<exec dir="." executable="${executable}">
			<arg line="${arglineIni} mvn clean${arglineEnd}" />
		</exec>
	</target>

	<!-- Objetivo compilar -->
	<target name="compilar" description="obtiene dependencias y compila" depends="limpiar">
		<exec dir="." executable="${executable}">
			<arg line="${arglineIni} mvn compile test-compile ${arglineEnd}" />
		</exec>
	</target>

	<!-- Objetivo site -->
	<target name="documentar" description="genera el javadoc del proyecto" depends="os-check">
		<exec dir="." executable="${executable}">
			<arg line="${arglineIni} mvn javadoc:javadoc${arglineEnd}" />
		</exec>
	</target>

	<!-- Objetivo ejecutarTestsTDDyCajaNegra -->
	<target name="ejecutarTestsTDDyCajaNegra" description="pruebas TDD y de caja negra" depends="os-check,compilar">
		<exec dir="." executable="${executable}">
			<arg line="${arglineIni} mvn -Dtest=CorreoTest,GestorTest test${arglineEnd}" />
		</exec>
	</target>
	<!-- Objetivo ejecutarsinAislamiento -->
			<target name="ejecutarTodoSinAislamiento" description="pruebas sin Aislamineto" depends="os-check,compilar">
				<exec dir="." executable="${executable}">
					<arg line="${arglineIni} mvn -Dtest=GestorTest,CorreoTest test${arglineEnd}" />
				</exec>
			</target>
	<!-- Objetivo ejecutarTestsAislamiento -->
			<target name="ejecutarTodosEnAislamiento" description="pruebas en aislamineto" depends="os-check,compilar">
				<exec dir="." executable="${executable}">
					<arg line="${arglineIni} mvn test -Dgroups=Isolation${arglineEnd}" />
				</exec>
			</target>
	<!-- Objetivo ejecutarCajaBlanca -->
	<target name="ejecutaCajaBlanca" description="pruebas Caja Blanca" depends="os-check,compilar">
		<exec dir="." executable="${executable}">
			<arg line="${arglineIni} mvn test -Dgroups=WhiteBox${arglineEnd}" />
		</exec>
	</target>
	<!-- Objetivo ejecutarSecuencia -->
		<target name="ejecutarPruebasSecuencia" description="pruebas Secuencias" depends="os-check,compilar">
			<exec dir="." executable="${executable}">
				<arg line="${arglineIni} mvn test -Dgroups=Secuencia${arglineEnd}" />
			</exec>
		</target>

	<!-- Objetivo obtenerInformeCobertura -->
	<target name="obtenerInformeCobertura" description="obtener informes de cobertura" depends="compilar, prepare-agent">
		<exec dir="." executable="${executable}">
			<arg line="${arglineIni} mvn -X -Djacoco.dataFile=${jacocoagent} -Djacoco.outputDirectory=./jacoco_ut org.jacoco:jacoco-maven-plugin:report${arglineEnd}" />
		</exec>
	</target>

	<target name="prepare-agent">
		<exec dir="." executable="${executable}">
			<arg line="${arglineIni} mvn -Djacoco.destFile=${jacocoagent} clean org.jacoco:jacoco-maven-plugin:prepare-agent install -Pcoverage-per-test${arglineEnd}" />
		</exec>
	</target>



	<target name="os-check" description="Determina sistema operativo y asigna executable y argline" depends="os-check-unix, os-check-win" />
	<target name="os-check-unix" if="isUnix">
		<property name="executable" value="sh" />
		<property name="arglineIni" value="-c '" />
		<property name="arglineEnd" value="'" />
	</target>
	<target name="os-check-win" if="isWindows">
		<property name="executable" value="cmd" />
		<property name="arglineIni" value="/c " />
		<property name="arglineEnd" value="" />
	</target>


</project>